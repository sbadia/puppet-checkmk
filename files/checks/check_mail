#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def check_mail_arguments(params):
    args = ''

    fetch_proto, fetch_params = params['fetch']
    args += ' --protocol=%s' % quote_shell_string(fetch_proto)

    if 'server' in fetch_params:
        args += ' --server=%s' % quote_shell_string(fetch_params['server'])
    else:
        args += ' --server=$HOSTADDRESS$'

    fetch_use_ssl, fetch_port = fetch_params['ssl']
    if fetch_use_ssl:
        args += ' --ssl'
    if fetch_port != None:
        args += ' --port=%d' % fetch_port

    args += ' --username=%s' % quote_shell_string(fetch_params['auth'][0])
    args += ' --password=%s' % quote_shell_string(fetch_params['auth'][1])

    if 'connect_timeout' in params:
        args += ' --connect-timeout=%d' % params['connect_timeout']

    if 'forward' in params:
        forward = params['forward']
        args += ' --forward-ec'
        if 'method' in forward:
            args += ' --forward-method=%s' % quote_shell_string(forward['method'])

        if 'match_subject' in forward:
            args += ' --match-subject=%s' % quote_shell_string(forward['match_subject'])

        if 'facility' in forward:
            args += ' --forward-facility=%d' % forward['facility']

        if 'host' in forward:
            args += ' --forward-host=%s' % quote_shell_string(forward['host'])

        if forward.get('application'):
            args += ' --forward-app=%s' % quote_shell_string(forward['application'])

        if 'body_limit' in forward:
            args += ' --body-limit=%d' % forward['body_limit']

        if 'cleanup' in forward:
            if forward['cleanup'] == True:
                args += ' --cleanup=delete'
            else:
                args += ' --cleanup=%s' % quote_shell_string(forward['cleanup'])

    return args


active_check_info['mail'] = {
    "command_line"        : '$USER1$/check_mail $ARG1$',
    "argument_function"   : check_mail_arguments,
    "service_description" : lambda params: params['service_description'],
    "has_perfdata"        : True,
}

